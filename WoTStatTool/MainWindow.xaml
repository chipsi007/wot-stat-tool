<Window x:Class="WotStatsTool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WotStatsTool"
        xmlns:view="clr-namespace:WotStatsTool.View"
        mc:Ignorable="d"
        Title="MainWindow" Height="500" Width="760">
    <Grid Margin="6">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <GroupBox Header="Check player" Grid.Row="0" Margin="0,0,0,6">
            <StackPanel>
                <view:PlayerSelectView DataContext="{Binding Path=PlayerSelect}" />
                <view:ExpectedValuesSelectorView DataContext="{Binding Path=ExpectedValueSelector}" />
                <CheckBox Content="compare expected values" IsChecked="{Binding CompareExpectedValues}"/>
                <view:ExpectedValuesSelectorView DataContext="{Binding ExpectedValueSelector2}" Visibility="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=CompareValuesVisibility}"/>
            </StackPanel>
        </GroupBox>

        <GroupBox Header="Snapshots" Grid.Row="1" Margin="0,0,0,6">
            <view:DisplayRangeSelectorView DataContext="{Binding Path=DisplayRangeSelector}" />
        </GroupBox>

        <GroupBox Grid.Row="2" Margin="0,0,0,6">
            <GroupBox.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Stats for "/>
                    <TextBlock x:Name="tbUsername" Text="Player X" FontWeight="Bold"/>
                </StackPanel>
            </GroupBox.Header>
            <Grid Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="3"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <view:StatTotalsView Grid.Column="0" DataContext="{Binding Path=StatTotals}" />
                <view:TankFilterView Grid.Column="2" DataContext="{Binding Path=TankFilter}" />

            </Grid>
        </GroupBox>

        <StackPanel Grid.Row="3">
            <CheckBox Content="show expected values" IsChecked="{Binding Path=ShowExpectedValues}" />
        </StackPanel>
        <!-- dummy to be able to bind visibility on DataGridTextColumn -->
        <FrameworkElement x:Name="expectedVisibility" Visibility="{Binding Path=ExpectedValuesVisibility}" />
        <FrameworkElement x:Name="compareVisibility" Visibility="{Binding Path=CompareValuesVisibility}" />
        <DataGrid x:Name="dgOverview" IsReadOnly="True" ItemsSource="{Binding Collection}" DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                AutoGenerateColumns="False" AlternatingRowBackground="LightGray" HeadersVisibility="Column" Grid.Row="4">
            <DataGrid.Resources>
                <Style TargetType="TextBlock" x:Key="AlignRight">
                    <Setter Property="HorizontalAlignment" Value="Right"/>
                </Style>
                <Style TargetType="DataGridCell" x:Key="HighlightPremium">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsPremium}" Value="True">
                            <Setter Property="Foreground" Value="#FFBDA000"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="DataGridCell" x:Key="WN8ColorScaling">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Content.Text, RelativeSource={RelativeSource Self}, Converter={x:Static local:IsLessThanConverter.Instance}, ConverterParameter=99999999}" Value="True"><Setter Property="Background" Value="#8225AD"/></DataTrigger>
                        <DataTrigger Binding="{Binding Content.Text, RelativeSource={RelativeSource Self}, Converter={x:Static local:IsLessThanConverter.Instance}, ConverterParameter=2900}" Value="True"><Setter Property="Background" Value="#C64CFF"/></DataTrigger>
                        <DataTrigger Binding="{Binding Content.Text, RelativeSource={RelativeSource Self}, Converter={x:Static local:IsLessThanConverter.Instance}, ConverterParameter=2450}" Value="True"><Setter Property="Background" Value="#00A0B8"/></DataTrigger>
                        <DataTrigger Binding="{Binding Content.Text, RelativeSource={RelativeSource Self}, Converter={x:Static local:IsLessThanConverter.Instance}, ConverterParameter=2000}" Value="True"><Setter Property="Background" Value="#2AE4FF"/></DataTrigger>
                        <DataTrigger Binding="{Binding Content.Text, RelativeSource={RelativeSource Self}, Converter={x:Static local:IsLessThanConverter.Instance}, ConverterParameter=1600}" Value="True"><Setter Property="Background" Value="#459300"/></DataTrigger>
                        <DataTrigger Binding="{Binding Content.Text, RelativeSource={RelativeSource Self}, Converter={x:Static local:IsLessThanConverter.Instance}, ConverterParameter=1200}" Value="True"><Setter Property="Background" Value="#77E812"/></DataTrigger>
                        <DataTrigger Binding="{Binding Content.Text, RelativeSource={RelativeSource Self}, Converter={x:Static local:IsLessThanConverter.Instance}, ConverterParameter=900}" Value="True"><Setter Property="Background" Value="#E6DF27"/></DataTrigger>
                        <DataTrigger Binding="{Binding Content.Text, RelativeSource={RelativeSource Self}, Converter={x:Static local:IsLessThanConverter.Instance}, ConverterParameter=650}" Value="True"><Setter Property="Background" Value="#FF8A00"/></DataTrigger>
                        <DataTrigger Binding="{Binding Content.Text, RelativeSource={RelativeSource Self}, Converter={x:Static local:IsLessThanConverter.Instance}, ConverterParameter=450}" Value="True"><Setter Property="Background" Value="#F11919"/></DataTrigger>
                        <DataTrigger Binding="{Binding Content.Text, RelativeSource={RelativeSource Self}, Converter={x:Static local:IsLessThanConverter.Instance}, ConverterParameter=300}" Value="True"><Setter Property="Background" Value="#BAAAAD"/></DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Vehicle" Binding="{Binding Name}" Width="200" CellStyle="{StaticResource HighlightPremium}"/>
                <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="60"/>
                <DataGridTextColumn Header="Nation" Binding="{Binding Nation}" Width="120"/>
                <DataGridTextColumn Header="Tier" Binding="{Binding Tier, StringFormat=N0}" Width="30" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="MoE" Binding="{Binding MarksOnGun, StringFormat=N0}" Width="30" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="Battles" Binding="{Binding Battles, StringFormat=N0}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="DPG" Binding="{Binding AvgDamage, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="Avg Spot" Binding="{Binding AvgSpotted, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="KPG" Binding="{Binding AvgFrags, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="Avg Cap" Binding="{Binding AvgCap, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="Avg Decap" Binding="{Binding AvgDecap, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="Hitrate" Binding="{Binding Hitrate, StringFormat=P}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="Avg XP" Binding="{Binding AvgExperience, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="Winrate" Binding="{Binding Winrate, StringFormat=P2}" Width="60" ElementStyle="{StaticResource AlignRight}"/>
                <DataGridTextColumn Header="WN8" Binding="{Binding WN8, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}" CellStyle="{StaticResource WN8ColorScaling}"/>
                <DataGridTextColumn Header="CoWN8" Binding="{Binding ComparisonWN8, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}" CellStyle="{StaticResource WN8ColorScaling}"/>
                <DataGridTextColumn Header="Expected Frag" Binding="{Binding ExFrags, StringFormat=N2}" Width="60" ElementStyle="{StaticResource AlignRight}"
                                    Visibility="{Binding Visibility, Source={x:Reference expectedVisibility}}" />
                <DataGridTemplateColumn Header="Frags" Width="60">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding AvgFrags, StringFormat=N2}" HorizontalAlignment="Right" />
                                <TextBlock Text="{Binding ExFrags, StringFormat=N2}" HorizontalAlignment="Right"
                                            Visibility="{Binding Visibility, Source={x:Reference expectedVisibility}}" />
                                <TextBlock Text="{Binding CoFrags, StringFormat=N2}" HorizontalAlignment="Right"
                                            Visibility="{Binding Visibility, Source={x:Reference compareVisibility}}" />
                                <TextBlock Text="{Binding DeltaFrags, StringFormat=+ 0.00;- 0.00;0}" HorizontalAlignment="Right"
                                            Visibility="{Binding Visibility, Source={x:Reference compareVisibility}}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
